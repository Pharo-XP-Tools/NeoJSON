(name 'Neo-JSON-Tests-SvenVanCaekenberghe.57' message 'Always store #propertyName in NeoJSONPropertyMapping as Symbol. Use this invariant in NeoJSONObjectMapping, specifically in #propertyNamed:ifAbsent: #mapProperty:getter:setter: and #mapInstVar:to: to minimize the number of conversions needed.Add NeoJSONMappingTests>>#testSymbolOrStringInstVarMapping to make sure both String and Symbols are allowed as instance variable mapping specification. ' id '79e38d9e-ef20-0d00-9ccc-cbcc050dd8ac' date '6 February 2018' time '5:43:46.61041 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-marianopeck.56' message '* Remove Date newDay:monthIndex:year:  and change tests to use #fromString: ' id '65e5b4e8-eb20-0d00-8086-e9a707903797' date '6 February 2018' time '9:18:10.811451 am' author 'marianopeck' ancestors ((name 'Neo-JSON-Tests-marianopeck.55' message '* Avoid the #includesSubString: and provide another approach so that includesSubstring: can work with Pharo and VAST. Also fixed the tests calling it. ' id '35f1027c-eb20-0d00-8083-065407903797' date '6 February 2018' time '8:47:47.209719 am' author 'marianopeck' ancestors ((name 'Neo-JSON-Tests-marianopeck.54' message 'Small fix on testTime' id 'e9eb9823-a120-0d00-975f-dbf9011ccac0' date '2 February 2018' time '4:05:56.286689 pm' author 'marianopeck' ancestors ((name 'Neo-JSON-Tests-marianopeck.53' message 'Small fix' id '45f5f033-a020-0d00-8fbe-0abe081b95f3' date '2 February 2018' time '2:58:55.524553 pm' author 'marianopeck' ancestors ((name 'Neo-JSON-Tests-marianopeck.52' message 'Another small fix in String vs Symbol in tests ' id 'd56601b5-8720-0d00-bd6a-90ea0307cbab' date '1 February 2018' time '9:45:26.680488 am' author 'marianopeck' ancestors ((name 'Neo-JSON-Tests-marianopeck.51' message '* Use newDay:  monthIndex:  year: * Fix testMaps to not depend on the order of the keys. ' id '86f604c6-7920-0d00-bd69-b93d0307cbab' date '31 January 2018' time '5:08:02.584466 pm' author 'marianopeck' ancestors ((name 'Neo-JSON-Tests-marianopeck.50' message '* replace a few `String with: aCharacter` with `aCharacter asString`.' id '9305ea94-7520-0d00-bd5f-108c0307cbab' date '31 January 2018' time '12:07:58.866052 pm' author 'marianopeck' ancestors ((name 'Neo-JSON-Tests-marianopeck.49' message '* Use `NeoJSONObject newFrom:` rather than `as: NeoJSONObject` (for portability)' id '5c89d821-7520-0d00-bd5c-b5ba0307cbab' date '31 January 2018' time '11:35:48.341463 am' author 'marianopeck' ancestors ((name 'Neo-JSON-Tests-marianopeck.48' message 'testDynamicTyping should deal either with strings or symbols and compare that' id 'bf651420-7320-0d00-be54-9644006b589b' date '31 January 2018' time '9:12:08.774329 am' author 'marianopeck' ancestors ((name 'Neo-JSON-Tests-marianopeck.47' message 'One more Array {} issue' id 'dc417b5e-6820-0d00-be51-7b8c006b589b' date '30 January 2018' time '8:22:11.062475 pm' author 'marianopeck' ancestors ((name 'Neo-JSON-Tests-marianopeck.46' message 'Some more Array {} replacements' id '6d8b8a4a-6420-0d00-be50-de64006b589b' date '30 January 2018' time '3:30:16.650938 pm' author 'marianopeck' ancestors ((name 'Neo-JSON-Tests-marianopeck.45' message 'Do not use {} for building arrays as that is not cross platform. Instead either use Array with:with:... or OrederedCollection new add:..;add:..;yourself when the collection is bigger than 6 elements. ' id 'e0276090-6220-0d00-be4f-4918006b589b' date '30 January 2018' time '1:26:38.343347 pm' author 'marianopeck' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.44' message 'Fix the NeoJSONWriter>>#writeNil: true option by adding a short circuit to NeoJSONWriter>>nextPut:as: (as reported by Juraj Kubelka)Add #testRectanglePointsWithNil' id '35acdd9b-431a-0d00-850f-878405ce5378' date '13 November 2017' time '6:59:37.365898 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.43' message 'Add #testVirtualTransferObject as another mapping example' id 'f40af758-7816-0d00-89cd-641e08d6220e' date '26 September 2017' time '2:14:01.71055 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.42' message 'merge' id '4803eec7-7716-0d00-beba-4df304c5ff7e' date '26 September 2017' time '1:33:28.422456 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.41' message 'Implement some missing code in NeoJSONCustomMapping (the writing part of #listOfElementSchema: #listOfType:andElementSchema: #mapWithValueSchema:)Add NeoJSONStreamingWriter>>#writeElementAs:Add NeoJSONMappingTests>>#testDynamicTyping as an example' id 'a9a900e0-2816-0d00-a04d-a6fb0e598362' date '22 September 2017' time '3:25:09.881494 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.39' message 'Improve error handling and compliance.Added NeoJSONValidation that uses some external positive/negative specificationsAdded NeoJSONReader>>#failIfNotAtEnd to optionally force correct end of input parsing and catch extraneous inputImprove NeoJSONReader>>#parseCharacter error reporting in case of incomplete escapesImprove NeoJSONReader>>#parseListDo: & #parseMapDo: error reportingNeoJSONReader>>#parseNumberExponent (1) add error for missing exponents (2) add errors for too large & too small exponents versus Float limits' id 'bb2a9e2c-080d-0d00-a714-e48a0189d909' date '29 May 2017' time '11:37:36.701381 am' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.38' message 'Add NeoJSONObject>>#atPath: and #atPath:put:Add NeoJSONObjectTests>>#testAtPath and #testAtPathPut' id '73623f7f-740a-0d00-b51b-f4000088e41c' date '26 April 2017' time '4:36:04.583272 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.37' message 'Fix a bug where initial whitespace when reading a string was consumed (thx Max Leske)Add a regression case to NeoJSONReaderTests>>#testStrings' id 'f000b8c5-c106-0d00-9801-41dd0c8d4a06' date '10 March 2017' time '2:06:52.864035 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.36' message 'merge some tests that got lost' id '1ccee649-76ed-4112-b4c0-d8cf21cafc6e' date '2 February 2017' time '1:49:23.579466 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.35' message 'Bugfix to NeoJSONWriter>>#escapeUnicode: [thank you, Tomohiro Oda] code points between 16rFFF and 16rFFFF where encoded wrongly when #asciiOnly was trueAdd high code point string to NeoJSONWriteReadTests>>#testStrings and add new NeoJSONWriteReadAsciiOnlyTests subclass' id '27263197-84b3-45c2-97d4-e99e63d51d89' date '24 November 2016' time '10:30:35.120461 am' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.34' message 'Use an OrderedDictionary instead of a regular Dictionary to store the properties inside a NeoJSONObjectMapping - this allows the user to control the order of properties while writing, if neededAdd NeoJSONWriterTests>>#testPreservePropertyOrder' id '883b6ef1-e5fc-4d85-b86c-b21c1b5a3d6c' date '2 July 2016' time '12:03:30.417248 am' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.33' message 'Added NeoJSONReader>>#nextListAs: as suggested by Norbert HartlAdded NeoJSONReaderTests>>#testArrayOfPointsUsingNextListAs' id '8f4620bc-d5f5-4b3a-aaf0-ee4b8b7a9ccf' date '16 March 2016' time '11:25:04.185192 am' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.32' message 'Added support for characters not in the Basic Multilingual Plane encoding as a UTF-16 surrogate pairSee https://tools.ietf.org/html/rfc7159#section-7' id '484452d1-3d3b-414c-9c3a-fdfdd220ac65' date '24 February 2016' time '2:51:29.012947 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.31' message 'New #allowNil option to Object mapping so that null values are accepted and returned as nil when reading a schema using #nextAs: (off by default)Added NeoJSONObjectMapping>>#allowNilAdded NeoJSONReaderTests>>#testAllowNil' id '650b4ecf-c9d9-40a5-a988-e4e3801faa42' date '30 December 2015' time '12:32:13.455009 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.30' message 'fix NeoJSONObjectTest>>#testJSON to no longer mix NeoJSONObject with Dictionary (due to changed equality tests)' id '8d78dfb8-9216-483f-9183-c4467fb351d2' date '25 November 2015' time '9:21:18.608509 am' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.26' message 'Added NeoJSONObject, a convencience subclass of Dictionary that mimics some JavaScript behavior' id 'a601b541-7f8b-4d10-9c57-2423b6c0a5fb' date '8 September 2014' time '2:26:47.985076 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.25' message 'Added NeoJSONWriterTests>>#testPointWriteNilAdded NeoJSONWriter #writeNil property, defaulting to false; when true, nil instance variables will be written as null by NeoJSONPropertyMapping, else they will be skipped' id 'f1479d45-8d24-4bf6-b29a-aaf9f984c084' date '28 May 2014' time '8:54:10.767617 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.24' message 'Added new feature NeoJSONWriter>>#nextPutAs: symmetrical to NeoJSONReader>>#next:as: Added 4 unit test to exercise the new options' id '4c7461c1-82ea-4126-8b5c-ef307168120a' date '24 March 2014' time '12:19:53.503067 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.23' message 'Added basic support for mapping using inheritance when using #neoJonMapping : (see #testObject3)Renamed #new[Custom|Object]MappingFor: to [custom|object]MappingFor: to better reflect the new behaviorThanks  Philippe Back for making these suggestions!' id '27fad240-c6b9-4d00-a4e6-6e49fd612dfb' date '22 March 2014' time '11:04:11.513921 am' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.22' message 'remove timing assertions from NeoJSONBenchmarkTests sinc they occasionally fail on the CI servers' id '3a07a705-816f-4981-9269-8d20620a00e2' date '15 January 2014' time '7:31:53.75366 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.21' message 'Increase the NeoJSONBenchmarkTests>>#testPrettyPrinter timeout even more' id '90807026-211d-4644-b211-1ea5bfd92bd6' date '27 December 2013' time '9:44:01.082714 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.20' message 'Give NeoJSONBenchmarksTests some more time to finish (on slow CI build slaves)' id 'f5f8f820-40d4-44ea-b5b6-8634e4cb7c5e' date '27 December 2013' time '7:01:23.816121 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.19' message 'New feature: NeoJSONWriter>>#asciiOnly: to escape all non ASCII characters in strings' id 'e1a69fdb-7e41-46f7-9f52-312eae3fab61' date '3 September 2013' time '12:21:56.262333 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.18' message 'Added tests for NeoJSONCustomMapping>>#mapWithValueSchema:' id '3f001444-6572-47d5-b656-96363c695522' date '30 August 2013' time '11:09:49.845805 am' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.17' message 'Make SmallDictionary optional in NeoJSONReaderTests>>#testSmallDictionary' id '5fa85190-9a4c-4b91-9747-f5e6a547e5ad' date '4 July 2013' time '6:43:12.874 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.16' message 'add NeoJSONMockStream>>#peekFor:' id 'baadfdb3-b8b4-4ce5-b072-0ebf67edd45f' date '3 December 2012' time '11:14:13.632 am' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.15' message 'added code to test the character stream API being used' id '696b4956-43ef-4fb8-a295-aa0bcc16685c' date '13 June 2012' time '4:29:41.988 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.14' message 'bugfix in NeoJSONReader>>#match:do:' id '7e664c0d-c5c3-4e64-a784-c274a85a8230' date '13 June 2012' time '2:58:28.242 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.13' message 'extended NeoJSONReader with settable listClass and mapClass as well as a propertyNamesAsSymbols optionextended class and method comments' id '4c90aab7-73c6-47fe-b52f-46954c06bf19' date '13 June 2012' time '11:57:09.49 am' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.12' message 'added tests for bogus input' id '50e7e260-7299-4ff8-880b-cbfd7bc8b30a' date '12 June 2012' time '4:20:02.239 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.11' message 'major simplification: removed NeoJSON[Composite|List|Map]Mapping, all to be handled by blocks in NeoJSONCustomMappingrenamed forCustom:do: to for:customDo:accessor based mapping to NeoJSONObjectMapping' id 'fcdc4252-6e15-4832-984f-84fbe1486163' date '12 June 2012' time '1:36:40.377 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.10' message 'added another benchmark' id '0f01e8f8-a367-4cb9-b730-1d8c0b411743' date '10 June 2012' time '9:28:30.577 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.9' message 'added NeoJSONTestObject1 with class side #neoJsonMapping: method' id 'ac3db680-73e6-4358-882c-e237697a7db4' date '9 June 2012' time '6:56:55.581 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.8' message 'added custom mapping tests' id '015e7c92-0411-4c7f-80b3-2d18a445250e' date '8 June 2012' time '10:10:24.734 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.7' message 'adding valueSchema to propertyMapping' id '9723e179-f1b9-4641-85ea-45ba89487b07' date '8 June 2012' time '8:36:25 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.6' message '1st version where list mapping works on some simple examples' id '6dbd0ade-2632-42a1-bd3c-45ef3fc0b596' date '8 June 2012' time '4:41:04 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.5' message '1st version with working object mapping for writer' id '59e0739f-bd31-4057-a366-2b5d27cf304c' date '6 June 2012' time '8:47:29 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.4' message 'added NeoJSONBenchmarkTests' id 'f36901e7-bb6d-4d6c-b4e8-5e70db8cce97' date '5 June 2012' time '5:30:17 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.3' message 'added more tests and a simple benchmark' id '5396d3f6-f1f0-46bc-961a-72a5919a9b79' date '4 June 2012' time '6:53:25 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.2' message 'first simple version of NeoJSONWriter' id '4b84c7e9-74d5-4b8b-bf9e-4be5fda1eb10' date '3 June 2012' time '7:58:06 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.1' message 'first simple version of NeoJSONReader' id '6927fec5-5a02-4ad2-8d4a-7be492da47da' date '2 June 2012' time '10:00:14 pm' author 'SvenVanCaekenberghe' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Neo-JSON-Tests-SvenVanCaekenberghe.29' message 'Added NeoJSONWriterTests>>#testListsExtra' id '7feb9d20-fae6-4970-9774-500b92f28f50' date '4 September 2015' time '2:03:43.177017 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.28' message 'Handle missing classes in NeoJSONWriterTests>>#testMapsExtra' id '6a459850-0c12-43d1-9a6b-9442e6d8fd8e' date '26 August 2015' time '2:06:11.298172 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Neo-JSON-Tests-SvenVanCaekenberghe.27' message 'Added NeoJSONWriterTests>>#testMapsExtra to test classes that are treated similar to Dictionary' id 'ff7a96fa-5174-4c2f-9950-eebcba1206c0' date '26 August 2015' time '1:22:00.626803 pm' author 'SvenVanCaekenberghe' ancestors ((id 'a601b541-7f8b-4d10-9c57-2423b6c0a5fb')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Neo-JSON-Tests-SvenVanCaekenberghe.40' message 'Added NeoJSONExamplesTests with #testPoints and #testRectanglePointsChanged NeoJSONObjectMapping #mapAccessors: #mapAllInstVars #mapInstVars and #mapInstVars: to return a collection of the generated mappingsThanks Juraj Kubelka !' id '9783deb7-0310-0d00-8c60-f3410702b82a' date '6 July 2017' time '10:34:12.998461 am' author 'SvenVanCaekenberghe' ancestors ((id 'bb2a9e2c-080d-0d00-a714-e48a0189d909')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())